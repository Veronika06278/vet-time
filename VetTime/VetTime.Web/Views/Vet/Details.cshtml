@model VetTime.Web.ViewModels.Vet.VetDetailsViewModel

@{
    ViewData["Title"] = Model.FirstName + " " + Model.LastName;
}
<link href="~/css/schedule.css" rel="stylesheet" />

<div class="container mt-5">
    <div class="row mb-4 align-items-center">
        <div class="col-md-4">
            @if (string.IsNullOrEmpty(Model.ImageUrl))
            {
                Model.ImageUrl = "https://fdlc.org/wp-content/uploads/2021/01/157-1578186_user-profile-default-image-png-clipart.png.jpeg";
            }
            <img src="@Model.ImageUrl"
                 alt="@Model.FirstName @Model.LastName"
                 class="img-fluid rounded"
                 style="max-height: 400px; width: 100%; object-fit: cover;" />
        </div>
        <div class="col-md-8">
            <h2>@Model.FirstName @Model.LastName</h2>
            <p class="text-muted mb-2">@string.Join(", ", Model.Specializations)</p>
            <p class="mb-1"><strong>Address:</strong> @Model.Address</p>
            <p class="mb-3"><strong>Rating:</strong> @Model.Rate.ToString("0.0")</p>
        </div>
    </div>

    <hr />

    <h4>Make an appointment</h4>
    <form asp-controller="Vet" asp-action="BookAppointment" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" name="vetId" value="@Model.Id" />
        <input type="hidden" name="appointmentTime" id="SelectedAppointmentTime" />

        <div class="d-flex border-bottom pb-2 mb-3">
            @{
                var days = Model.AllAppointments.Keys
                .Select(dt => dt.Date)
                .Distinct()
                .OrderBy(d => d)
                .ToList();
            }
            @for (int i = 0; i < days.Count; i++)
            {
                var day = days[i];
                <div class="me-4 text-center day-header" data-day-index="@i" style="cursor:pointer">
                    <div>@day.ToString("dd")</div>
                    <div class="text-muted">@day.ToString("ddd")</div>
                </div>
            }
        </div>

        @for (int i = 0; i < days.Count; i++)
        {
            var day = days[i];
            <div class="slot-day-container mb-4" data-day-index="@i" style="display: @(i==0?"block":"none")">
                <div class="d-flex flex-wrap">
                    @foreach (var kvp in Model.AllAppointments.Where(x => x.Key.Date == day))
                    {
                        var time = kvp.Key;
                        var booked = kvp.Value != null;
                        var css = booked ? "slot booked" : "slot free";
                        <div class="@css" data-appointment-id="@(booked ? kvp.Value.Id.ToString() : "")"
                             data-time="@time.ToString("o")">
                            @time.ToString("HH:mm")
                        </div>
                    }
                </div>
            </div>
        }

        <button type="submit" id="saveButton" class="btn btn-success" disabled>Save appointment</button>

        
    </form>
</div>

@section Scripts {
    <script>
        // Превключване на дни
        document.querySelectorAll('.day-header').forEach(h => {
            h.addEventListener('click', () => {
                var idx = h.getAttribute('data-day-index');

                // 1) Махаме 'selected' от всички дни
                document.querySelectorAll('.day-header')
                    .forEach(d => d.classList.remove('selected'));

                // 2) Добавяме 'selected' на кликнатия
                h.classList.add('selected');

                // 3) Скриваме всички контейнери със слотове
                document.querySelectorAll('.slot-day-container')
                    .forEach(c => c.style.display = 'none');

                // 4) Показваме този, съответстващ на data-day-index
                document.querySelector(`.slot-day-container[data-day-index="${idx}"]`)
                    .style.display = 'block';
            });
        });

        // Избор на слот
        document.querySelectorAll('.slot.free').forEach(el => {
            el.addEventListener('click', () => {
                // 1) Махаме 'selected' от всички слотове
                document.querySelectorAll('.slot.selected')
                    .forEach(s => s.classList.remove('selected'));

                // 2) Добавяме 'selected' на този
                el.classList.add('selected');

                // 3) Вземаме ISO-времето
                var apptTime = el.getAttribute('data-time');
                document.getElementById('SelectedAppointmentTime').value = apptTime;
                document.getElementById('saveButton').disabled = false;
            });
        });
    </script>
}


